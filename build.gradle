plugins {
    id 'java'
    id 'groovy'
    id 'java-gradle-plugin'

    id 'com.gradle.plugin-publish' version '0.12.0'

    // for publishing snapshots
    id 'maven-publish'
    id 'org.hibernate.build.maven-repo-auth' version '3.0.4'
}

apply from: rootProject.file( 'gradle/base-information.gradle' )

ext {
    pluginId = 'sebersole.quarkus.plugin-poc'
}

gradlePlugin {
    plugins {
        plugin {
            id = project.pluginId
            implementationClass = 'com.github.sebersole.gradle.quarkus.QuarkusPlugin'
        }
    }
}

pluginBundle {
    ext {
        pluginUrl = 'https://github.com/sebersole/quarkus-gradle-plugin-poc'
        pluginDescription = 'Proof-of-concept Gradle plugin for builds using Quarkus'
    }
    website = ext.pluginUrl
    vcsUrl = ext.pluginUrl
    description = ext.pluginDescription
    tags = ['quarkus', 'graalvm']

    plugins {
        plugin {
            // id is captured from java-gradle-plugin configuration
            displayName = pluginDescription
        }
    }
}

if ( version.toString().endsWith( '-SNAPSHOT' ) ) {
    tasks.publishPlugins.enabled = false
}
else {
    tasks.publish.enabled = false
}

repositories {
    mavenCentral()
}

dependencies {
    implementation enforcedPlatform( "io.quarkus:quarkus-bom:${project.quarkusVersion}" )
    implementation 'org.jboss:jandex'

    testImplementation enforcedPlatform( "io.quarkus:quarkus-bom:${project.quarkusVersion}" )
    testImplementation "org.junit.jupiter:junit-jupiter-api:${project.junit5Version}"
    testImplementation 'org.hamcrest:hamcrest-core:1.3'
    testImplementation 'org.hamcrest:java-hamcrest:2.0.0.0'

    testRuntimeOnly enforcedPlatform( "io.quarkus:quarkus-bom:${project.quarkusVersion}" )
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${project.junit5Version}"
}

tasks.test {
    useJUnitPlatform()
}

sourceSets {
    main {
        // Have the Groovy compiler compile both
        java { srcDirs = [] }
        groovy { srcDirs += 'src/main/java' }
    }
    test {
        resources.srcDirs += 'src/test/projects'
    }
}


// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// for publishing snapshots
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

publishing {
    publications {
        publishedArtifacts( MavenPublication ) {
            from components.java
        }
    }

    repositories {
        maven {
            name 'jboss-snapshots-repository'
            url 'https://repository.jboss.org/nexus/content/repositories/snapshots'
        }
    }
}
// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

javadoc {
    options.addStringOption( 'Xdoclint:none', '-quiet' )
}



// Configure wrapper to download the full Gradle distribution
wrapper {
    // To upgrade the version of gradle used in the wrapper, run:
    //     ../gradlew wrapper --gradle-version NEW_VERSION

    // uncomment this if you want the Gradle source as well (useful for script debugging)
    //distributionType = Wrapper.DistributionType.ALL
}